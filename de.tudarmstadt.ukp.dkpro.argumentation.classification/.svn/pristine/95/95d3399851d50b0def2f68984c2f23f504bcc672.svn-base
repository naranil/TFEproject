package de.tudarmstadt.ukp.dkpro.argumentation.classification.features.pos;

import java.util.ArrayList;
import java.util.List;

import org.apache.uima.jcas.JCas;

import de.tudarmstadt.ukp.dkpro.core.api.frequency.util.FrequencyDistribution;
import de.tudarmstadt.ukp.dkpro.tc.api.exception.TextClassificationException;
import de.tudarmstadt.ukp.dkpro.tc.api.features.DocumentFeatureExtractor;
import de.tudarmstadt.ukp.dkpro.tc.api.features.Feature;
import de.tudarmstadt.ukp.dkpro.tc.features.ngram.util.NGramUtils;

public class POSNGramExtractor
    extends POSNGramFeatureExtractorBase
    implements DocumentFeatureExtractor
{

    @Override
    public List<Feature> extract(JCas jcas)
        throws TextClassificationException
    {

        List<Feature> features = new ArrayList<Feature>();
        FrequencyDistribution<String> documentPOSNgrams = null;
        documentPOSNgrams = NGramUtils.getDocumentPosNgrams(jcas, posNgramMinN, posNgramMaxN, useCanonicalTags);

        for (String topNgram : topKSet.getKeys()) {
            if (documentPOSNgrams.getKeys().contains(topNgram)) {
                features.add(new Feature(getFeaturePrefix() + "_" + topNgram, 1));
            }
            else {
                features.add(new Feature(getFeaturePrefix() + "_" + topNgram, 0));
            }
        }
        return features;

    }

//    @SuppressWarnings("null")
//    public static void main(String args[])
//    {
//        try {
//            // Open the file that is the first
//            // command line parameter
//            FileInputStream fstream = new FileInputStream("src/main/resources/info/pos2grams.txt");
//            // Get the object of DataInputStream
//            DataInputStream in = new DataInputStream(fstream);
//            BufferedReader br = new BufferedReader(new InputStreamReader(in));
//            String strLine;
//
//            // Read File Line By Line
//            while ((strLine = br.readLine()) != null) {
//                // Print the content on the console
//                pos2grams.add(strLine);
//            }
//            // Close the input stream
//            in.close();
//        }
//        catch (Exception e) {// Catch exception if any
//            System.err.println("Error: " + e.getMessage());
//        }
//
////        Iterator<String> iterator = pos2grams.iterator();
////        while (iterator.hasNext()) {
////            System.out.println(iterator.next());
////        }
//    }
}
